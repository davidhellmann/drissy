module.exports = {
    plugins: ['stylelint-selector-bem-pattern', 'stylelint-order'],
    rules: {
        'at-rule-empty-line-before': [
            'false',
            {
                ignore: ['after-comment'],
            },
        ],
        'at-rule-name-case': 'lower',
        'at-rule-name-newline-after': 'always-multi-line',
        'at-rule-name-space-after': 'always',
        'at-rule-no-unknown': [
            true,
            {
                ignoreAtRules: [
                    'apply',
                    'tailwind',
                    'import-normalize',
                    'include',
                    'media',
                    'function',
                    'return',
                    'if',
                    'else',
                    'for',
                    'each',
                    'mixin',
                    'elseif',
                    'error',
                    'content',
                    'screen',
                ],
            },
        ],
        'at-rule-no-vendor-prefix': true,
        'at-rule-semicolon-newline-after': 'always',
        'block-closing-brace-empty-line-before': 'never',
        'block-closing-brace-newline-after': 'never-single-line',
        'block-closing-brace-newline-before': 'always-multi-line',
        'block-closing-brace-space-after': 'always-single-line',
        'block-closing-brace-space-before': 'always-single-line',
        'block-no-empty': true,
        'block-opening-brace-newline-after': 'always',
        'block-opening-brace-newline-before': 'never-single-line',
        'block-opening-brace-space-after': 'always-single-line',
        'block-opening-brace-space-before': 'always-single-line',
        'color-hex-case': 'lower',
        'color-hex-length': 'short',
        'color-named': 'never',
        'color-no-invalid-hex': true,
        'comment-empty-line-before': [
            'false',
            {
                except: ['first-nested'],
            },
        ],
        'comment-no-empty': true,
        'comment-whitespace-inside': 'always',
        'custom-property-empty-line-before': 'never',
        'declaration-bang-space-after': 'never',
        'declaration-bang-space-before': 'always',
        'declaration-block-no-duplicate-properties': [
            true,
            {
                ignore: ['consecutive-duplicates-with-different-values'],
            },
        ],
        'declaration-block-no-shorthand-property-overrides': true,
        'declaration-block-semicolon-newline-after': 'always',
        'declaration-block-semicolon-newline-before': 'never-multi-line',
        'declaration-block-semicolon-space-after': 'always-single-line',
        'declaration-block-semicolon-space-before': 'never',
        'declaration-block-single-line-max-declarations': 1,
        'declaration-block-trailing-semicolon': 'always',
        'declaration-colon-space-after': 'always-single-line',
        'declaration-colon-space-before': 'never',
        'declaration-empty-line-before': 'never',
        'font-family-name-quotes': 'always-where-recommended',
        'font-family-no-duplicate-names': true,
        'font-weight-notation': 'numeric',
        'function-blacklist': ['rgb'],
        'function-calc-no-unspaced-operator': true,
        'function-comma-newline-after': 'always-multi-line',
        'function-comma-newline-before': 'never-multi-line',
        'function-comma-space-after': 'always-single-line',
        'function-comma-space-before': 'never',
        'function-linear-gradient-no-nonstandard-direction': true,
        'function-max-empty-lines': 0,
        'function-parentheses-newline-inside': 'always-multi-line',
        'function-parentheses-space-inside': 'never-single-line',
        'function-url-quotes': 'always',
        'function-whitespace-after': 'always',
        indentation: 4,
        'keyframe-declaration-no-important': true,
        'length-zero-no-unit': true,
        'max-empty-lines': 2,
        'max-nesting-depth': 5,
        'media-feature-colon-space-after': 'always',
        'media-feature-colon-space-before': 'never',
        'media-feature-name-case': 'lower',
        'media-feature-name-no-unknown': true,
        'media-feature-name-no-vendor-prefix': true,
        'media-feature-parentheses-space-inside': 'never',
        'media-feature-range-operator-space-after': 'always',
        'media-feature-range-operator-space-before': 'always',
        'media-query-list-comma-newline-after': 'always',
        'media-query-list-comma-newline-before': 'never-multi-line',
        'media-query-list-comma-space-after': 'always-single-line',
        'media-query-list-comma-space-before': 'never',
        'no-descending-specificity': true,
        'no-duplicate-selectors': true,
        'no-empty-source': true,
        'no-eol-whitespace': true,
        'no-extra-semicolons': true,
        'no-invalid-double-slash-comments': true,
        'no-missing-end-of-source-newline': true,
        'no-unknown-animations': true,
        'number-leading-zero': 'always',
        'number-max-precision': 6,
        'number-no-trailing-zeros': true,
        'property-case': 'lower',
        'property-no-unknown': [
            true,
            {
                ignoreProperties: ['composes'],
            },
        ],
        'property-no-vendor-prefix': true,
        'rule-empty-line-before': [
            'always',
            {
                except: ['first-nested'],
            },
        ],
        'selector-attribute-brackets-space-inside': 'never',
        'selector-attribute-operator-space-after': 'never',
        'selector-attribute-operator-space-before': 'never',
        'selector-attribute-quotes': 'always',
        'selector-class-pattern': '',
        'selector-combinator-space-after': 'always',
        'selector-combinator-space-before': 'always',
        'selector-descendant-combinator-no-non-space': true,
        'selector-id-pattern': '^[a-zA-Z]+$',
        'selector-max-compound-selectors': 5,
        'selector-max-specificity': '0,5,0',
        'selector-max-id': 0,
        'selector-no-qualifying-type': [
            true,
            {
                ignore: ['attribute'],
            },
        ],
        'selector-pseudo-class-case': 'lower',
        'selector-pseudo-class-no-unknown': [
            true,
            {
                ignorePseudoClasses: ['global'],
            },
        ],
        'selector-pseudo-class-parentheses-space-inside': 'never',
        'selector-pseudo-element-case': 'lower',
        'selector-pseudo-element-colon-notation': 'double',
        'selector-pseudo-element-no-unknown': true,
        'selector-type-case': 'lower',
        'selector-type-no-unknown': true,
        'selector-max-empty-lines': 0,
        'selector-list-comma-newline-after': 'always-multi-line',
        'selector-list-comma-newline-before': 'never-multi-line',
        'selector-list-comma-space-after': 'always-single-line',
        'selector-list-comma-space-before': 'never',
        'shorthand-property-no-redundant-values': true,
        'string-quotes': 'single',
        'time-min-milliseconds': 100,
        'unit-blacklist': ['s'],
        'unit-case': 'lower',
        'unit-no-unknown': true,
        'value-keyword-case': 'lower',
        'value-no-vendor-prefix': true,
        'value-list-comma-newline-after': 'always-multi-line',
        'value-list-comma-newline-before': 'never-multi-line',
        'value-list-comma-space-after': 'always-single-line',
        'value-list-comma-space-before': 'never',
        'value-list-max-empty-lines': 0,
        'plugin/selector-bem-pattern': {
            preset: 'bem',
            componentName:
                "(([a-z0-9]+(?!-$)-?)+)(([a-z0-9]+(?!-$)-?)+)(((__|--|-)(([a-z0-9\\[\\]'=]+(?!-$)-?)+))+)?$",
            componentSelectors: {
                initial:
                    "\\.{componentName}(((__|--|-)(([a-z0-9\\[\\]'=]+(?!-$)-?)+))+)?$",
            },
            utilitySelectors: '^\\.u-[a-z]+$',
        },
    },
};
